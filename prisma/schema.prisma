generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Client {
  clientid          String   @id @map("_id")
  maintenance       Boolean  @default(false)
  blacklistedGuilds String[]
}

model Guild {
  guildId       String         @id @map("_id")
  isPremium     Boolean        @default(false)
  miscellaneous Miscellaneous?
  moderation    Moderation?
  verification  Verification?
  joinGate      JoinGate?
}

model Miscellaneous {
  guildId            String   @id @map("_id")
  language           String   @default("en-US")
  themeColor         String   @default("#2b2d31")
  managerRoles       String[]
  administratorRoles String[]
  moderatorRoles     String[]
  helperRoles        String[]
  guild              Guild    @relation(fields: [guildId], references: [guildId])
}

model Moderation {
  guildId   String  @id @map("_id")
  isEnabled Boolean @default(false)
  guild     Guild   @relation(fields: [guildId], references: [guildId])
}

model Verification {
  guildId                      String   @id @map("_id")
  isEnabled                    Boolean  @default(false)
  rolesToAddOnVerification     String[]
  rolesToRemoveOnVerification  String[]
  welcomeOnVerification        Boolean  @default(false)
  welcomeOnVerificationChannel String?
  welcomeOnVerificationMessage String   @default("Welcome {{user}}")
  guild                        Guild    @relation(fields: [guildId], references: [guildId])
}

model JoinGate {
  guildId                      String        @id @map("_id")
  isEnabled                    Boolean       @default(false)
  dmMembersWhenPunished        Boolean       @default(false)
  targetUnverifiedBots         Boolean       @default(false)
  triggerActionUnverifiedBots  TriggerAction @default(Log)
  targetNoAvatarUsers          Boolean       @default(false)
  triggerActionNoAvatarUsers   TriggerAction @default(Log)
  targetAdvertisingName        Boolean       @default(false)
  triggerActionAdvertisingName TriggerAction @default(Kick)
  guild                        Guild         @relation(fields: [guildId], references: [guildId])
}

enum TriggerAction {
  Log
  Kick
  Ban
}
